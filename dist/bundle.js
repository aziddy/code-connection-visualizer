(()=>{"use strict";var e={672:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextRenderer=void 0,t.TextRenderer=class{constructor(e){this.characterBounds=[],this.fileBounds=new Map,this.canvas=e;const t=e.getContext("2d");if(!t)throw new Error("Could not get 2D context from canvas");this.ctx=t,this.measuringCanvas=document.createElement("canvas"),this.measuringCanvas.width=1e3,this.measuringCanvas.height=100;const n=this.measuringCanvas.getContext("2d");if(!n)throw new Error("Could not create measuring context");this.measuringCtx=n,this.fontConfig={family:'Consolas, Monaco, "Courier New", monospace',size:14,weight:"normal",style:"normal"},this.state={fontSize:14,fontFamily:this.fontConfig.family,lineHeight:20,charWidth:8.4,scrollX:0,scrollY:0,scale:1},this.updateFontMetrics()}updateFontMetrics(){const e=this.getFontString();this.measuringCtx.font=e,this.ctx.font=e;const t=this.measuringCtx.measureText("M");this.state.charWidth=t.width;const n=this.measuringCtx.measureText("Mg"),i=n.actualBoundingBoxAscent+n.actualBoundingBoxDescent;this.state.lineHeight=Math.max(1.4*i,1.4*this.state.fontSize)}getFontString(){return`${this.fontConfig.style} ${this.fontConfig.weight} ${this.fontConfig.size}px ${this.fontConfig.family}`}setFontSize(e){this.fontConfig.size=e,this.state.fontSize=e,this.updateFontMetrics()}setFontFamily(e){this.fontConfig.family=e,this.state.fontFamily=e,this.updateFontMetrics()}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}renderText(e,t){this.clear(),this.characterBounds=[];const n=20-this.state.scrollX,i=30-this.state.scrollY;this.ctx.font=this.getFontString(),this.ctx.textBaseline="top";for(let s=0;s<e.length;s++){const o=e[s],l=i+s*this.state.lineHeight;if(l+this.state.lineHeight<0||l>this.canvas.height){this.characterBounds[s]=[];continue}const c=[];for(let e=0;e<o.length;e++){const i=o[e],h=n+e*this.state.charWidth,a={char:i,x:h,y:l,width:this.state.charWidth,height:this.state.lineHeight,charIndex:e,lineIndex:s};c.push(a);const r=t?.[s]?.[e];r?(r.backgroundColor&&(this.ctx.fillStyle=r.backgroundColor,this.ctx.fillRect(h,l,this.state.charWidth,this.state.lineHeight)),this.ctx.fillStyle=r.color):this.ctx.fillStyle="#d4d4d4",this.ctx.fillText(i,h,l)}this.characterBounds[s]=c}}renderFileText(e,t){const n=[];this.ctx.fillStyle="#1e1e1e",this.ctx.fillRect(t.x,t.y,t.width,t.height),this.ctx.strokeStyle="#3e3e42",this.ctx.lineWidth=1,this.ctx.strokeRect(t.x,t.y,t.width,t.height),this.ctx.fillStyle="#cccccc",this.ctx.font="12px "+this.fontConfig.family,this.ctx.fillText(e.name,t.x+5,t.y+5);const i=t.x+10,s=t.y+25,o=t.width-20,l=t.height-35;this.ctx.save(),this.ctx.beginPath(),this.ctx.rect(t.x,t.y,t.width,t.height),this.ctx.clip(),this.ctx.font=this.getFontString(),this.ctx.textBaseline="top";const c=Math.floor(l/this.state.lineHeight),h=Math.min(e.lines.length,c);for(let t=0;t<h;t++){const l=e.lines[t],c=s+t*this.state.lineHeight,h=[],a=Math.floor(o/this.state.charWidth),r=Math.min(l.length,a);for(let n=0;n<r;n++){const s=l[n],o=i+n*this.state.charWidth,a={char:s,x:o,y:c,width:this.state.charWidth,height:this.state.lineHeight,charIndex:n,lineIndex:t};h.push(a);const r=e.syntaxStyles?.[t]?.[n];r?(r.backgroundColor&&(this.ctx.fillStyle=r.backgroundColor,this.ctx.fillRect(o,c,this.state.charWidth,this.state.lineHeight)),this.ctx.fillStyle=r.color):this.ctx.fillStyle="#d4d4d4",this.ctx.fillText(s,o,c)}n[t]=h}this.ctx.restore(),this.fileBounds.set(e.id,n)}getCharacterAt(e,t){for(const n of this.characterBounds)for(const i of n)if(e>=i.x&&e<i.x+i.width&&t>=i.y&&t<i.y+i.height)return i;return null}getCharacterAtInFile(e,t,n){const i=this.fileBounds.get(e.id);if(!i)return null;for(const e of i)for(const i of e)if(t>=i.x&&t<i.x+i.width&&n>=i.y&&n<i.y+i.height)return i;return null}getCharacterBounds(e,t){return e<0||e>=this.characterBounds.length||t<0||t>=this.characterBounds[e].length?null:this.characterBounds[e][t]}getCharacterBoundsInFile(e,t,n){const i=this.fileBounds.get(e.id);return i?t<0||t>=i.length||n<0||n>=i[t].length?null:i[t][n]:null}getAllCharacterBounds(){return this.characterBounds}getState(){return{...this.state}}setScroll(e,t){this.state.scrollX=e,this.state.scrollY=t}getLineHeight(){return this.state.lineHeight}getCharWidth(){return this.state.charWidth}highlightSelection(e,t,n,i,s="rgba(0, 122, 204, 0.3)"){if(this.ctx.fillStyle=s,e===n){const n=this.characterBounds[e];if(n&&n.length>0){const e=n[t]?.x||0,s=n[Math.min(i,n.length-1)]?.x||e,o=n[0].y;this.ctx.fillRect(e,o,Math.max(s-e+this.state.charWidth,this.state.charWidth),this.state.lineHeight)}}else for(let s=e;s<=n;s++){const o=this.characterBounds[s];if(o&&0!==o.length)if(s===e){const e=o[t]?.x||0,n=o[o.length-1]?.x+this.state.charWidth||e;this.ctx.fillRect(e,o[0].y,n-e,this.state.lineHeight)}else if(s===n){const e=o[0].x,t=o[Math.min(i,o.length-1)]?.x||e;this.ctx.fillRect(e,o[0].y,t-e+this.state.charWidth,this.state.lineHeight)}else{const e=o[0].x,t=o[o.length-1]?.x+this.state.charWidth||e;this.ctx.fillRect(e,o[0].y,t-e,this.state.lineHeight)}}}highlightSelectionInFile(e,t,n,i,s,o="rgba(0, 122, 204, 0.3)"){const l=this.fileBounds.get(e.id);if(l){if(this.ctx.save(),this.ctx.beginPath(),this.ctx.rect(e.x,e.y,e.width,e.height),this.ctx.clip(),this.ctx.fillStyle=o,t===i){const e=l[t];if(e&&e.length>0){const t=e[n]?.x||0,i=e[Math.min(s,e.length-1)]?.x||t,o=e[0].y;this.ctx.fillRect(t,o,Math.max(i-t+this.state.charWidth,this.state.charWidth),this.state.lineHeight)}}else for(let e=t;e<=i;e++){const o=l[e];if(o&&0!==o.length)if(e===t){const e=o[n]?.x||0,t=o[o.length-1]?.x+this.state.charWidth||e;this.ctx.fillRect(e,o[0].y,t-e,this.state.lineHeight)}else if(e===i){const e=o[0].x,t=o[Math.min(s,o.length-1)]?.x||e;this.ctx.fillRect(e,o[0].y,t-e+this.state.charWidth,this.state.lineHeight)}else{const e=o[0].x,t=o[o.length-1]?.x+this.state.charWidth||e;this.ctx.fillRect(e,o[0].y,t-e,this.state.lineHeight)}}this.ctx.restore()}}}},709:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CodeVisualizer=void 0;const i=n(672),s=n(868);t.CodeVisualizer=class{constructor(e){this.codeFiles=new Map,this.fileLayouts=new Map,this.connectionLines=[],this.defaultLineColor="#007acc",this.defaultLineStyle="solid",this.defaultConnectionLabel="",this.activeFileId=null,this.isSelecting=!1,this.selectionStart=null,this.selectionEnd=null,this.currentSelection=null,this.pendingSelection=null,this.firstSelection=null,this.isCreatingConnection=!1,this.selectedConnection=null,this.canvas=e;const t=e.getContext("2d");if(!t)throw new Error("Could not get 2D context from canvas");this.ctx=t,this.textRenderer=new i.TextRenderer(e),this.syntaxHighlighter=new s.SyntaxHighlighter,this.setupEventListeners()}setupEventListeners(){this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),document.addEventListener("keydown",this.handleKeyDown.bind(this)),this.canvas.addEventListener("contextmenu",e=>e.preventDefault())}handleMouseDown(e){const t=this.canvas.getBoundingClientRect(),n=e.clientX-t.left,i=e.clientY-t.top,s=this.getConnectionAtPosition(n,i);if(s)return void this.selectConnection(s);this.clearConnectionSelection();const o=this.getCharacterAtPosition(n,i);o&&(this.isSelecting=!0,this.selectionStart=o.char,this.selectionEnd=o.char,this.activeFileId=o.fileId,this.updateSelection())}handleMouseMove(e){if(!this.isSelecting||!this.selectionStart)return;const t=this.canvas.getBoundingClientRect(),n=e.clientX-t.left,i=e.clientY-t.top,s=this.getCharacterAtPosition(n,i);s&&s.fileId===this.activeFileId&&(this.selectionEnd=s.char,this.updateSelection())}handleMouseUp(e){this.isSelecting&&this.currentSelection&&this.finalizeSelection(),this.isSelecting=!1,this.selectionStart=null,this.selectionEnd=null}handleKeyDown(e){"c"!==e.key&&"C"!==e.key||(this.pendingSelection&&this.firstSelection?(this.createConnection(this.firstSelection,this.pendingSelection),this.firstSelection=null,this.pendingSelection=null,this.isCreatingConnection=!1):this.pendingSelection&&(this.firstSelection=this.pendingSelection,this.isCreatingConnection=!0,console.log("First selection set. Select another text sequence and press C again to create connection."))),"Escape"===e.key&&(this.firstSelection=null,this.isCreatingConnection=!1,console.log("Connection creation cancelled.")),"Delete"===e.key&&(this.selectedConnection?this.deleteSelectedConnection():(this.connectionLines=[],this.render(),console.log("All connections cleared.")))}updateSelection(){if(!this.selectionStart||!this.selectionEnd||!this.activeFileId)return;const e=Math.min(this.selectionStart.lineIndex,this.selectionEnd.lineIndex),t=Math.max(this.selectionStart.lineIndex,this.selectionEnd.lineIndex);let n,i;e===t?(n=Math.min(this.selectionStart.charIndex,this.selectionEnd.charIndex),i=Math.max(this.selectionStart.charIndex,this.selectionEnd.charIndex)):this.selectionStart.lineIndex<this.selectionEnd.lineIndex?(n=this.selectionStart.charIndex,i=this.selectionEnd.charIndex):(n=this.selectionEnd.charIndex,i=this.selectionStart.charIndex),this.currentSelection={startCharIndex:n,endCharIndex:i,startLine:e,endLine:t,fileId:this.activeFileId},this.render()}finalizeSelection(){if(this.currentSelection){this.pendingSelection={...this.currentSelection};const e=this.codeFiles.get(this.currentSelection.fileId)?.name||"Unknown";console.log(`Selected in ${e}: Line ${this.currentSelection.startLine+1}, Char ${this.currentSelection.startCharIndex} to Line ${this.currentSelection.endLine+1}, Char ${this.currentSelection.endCharIndex}`),this.isCreatingConnection?console.log("Now select the end point and press C to create connection."):console.log("Press C to set this as start of a connection.")}this.currentSelection=null}createConnection(e,t){const n={id:`conn_${Date.now()}_${Math.random().toString(36).substring(2,11)}`,start:{...e},end:{...t},color:this.defaultLineColor,width:2,style:this.defaultLineStyle,label:this.defaultConnectionLabel||void 0};this.connectionLines.push(n),this.render();const i=this.codeFiles.get(e.fileId)?.name||"Unknown",s=this.codeFiles.get(t.fileId)?.name||"Unknown",o=n.label?` with label "${n.label}"`:"";console.log(`Connection created between ${i}:${e.startLine+1} and ${s}:${t.startLine+1}${o} (${n.style} style)`)}loadCodeFile(e,t,n,i){console.log(`CodeVisualizer.loadCodeFile called: ${e}, ${t}, code length: ${n.length}`);const s=i||this.syntaxHighlighter.detectLanguage(n),o=n.split("\n"),l={id:e,name:t,content:n,language:s,lines:o,syntaxStyles:this.syntaxHighlighter.highlight(n,s)};this.codeFiles.set(e,l),console.log(`Files now loaded: ${Array.from(this.codeFiles.keys()).join(", ")}`),this.updateFileLayouts(),this.render(),console.log(`Code file '${t}' loaded with ${o.length} lines (${s})`)}loadCode(e,t){this.loadCodeFile("file1","Main File",e,t)}setFontSize(e){this.textRenderer.setFontSize(e),this.render()}setDefaultLineColor(e){this.defaultLineColor=e}setDefaultLineStyle(e){this.defaultLineStyle=e}setDefaultConnectionLabel(e){this.defaultConnectionLabel=e}handleResize(){this.updateFileLayouts(),this.render()}render(){console.log(`Rendering ${this.codeFiles.size} files`),this.textRenderer.clear();for(const[e,t]of this.codeFiles){const n=this.fileLayouts.get(e);console.log(`File ${e}: layout exists=${!!n}, visible=${n?.visible}`),n&&n.visible&&(console.log(`Rendering file ${e} at position (${n.x}, ${n.y})`),this.textRenderer.renderFileText(t,n))}if(this.currentSelection){const e=this.fileLayouts.get(this.currentSelection.fileId);e&&this.textRenderer.highlightSelectionInFile(e,this.currentSelection.startLine,this.currentSelection.startCharIndex,this.currentSelection.endLine,this.currentSelection.endCharIndex,"rgba(0, 122, 204, 0.3)")}if(this.pendingSelection&&!this.currentSelection){const e=this.fileLayouts.get(this.pendingSelection.fileId);e&&this.textRenderer.highlightSelectionInFile(e,this.pendingSelection.startLine,this.pendingSelection.startCharIndex,this.pendingSelection.endLine,this.pendingSelection.endCharIndex,this.isCreatingConnection?"rgba(255, 193, 7, 0.3)":"rgba(40, 167, 69, 0.3)")}if(this.firstSelection&&this.isCreatingConnection){const e=this.fileLayouts.get(this.firstSelection.fileId);e&&this.textRenderer.highlightSelectionInFile(e,this.firstSelection.startLine,this.firstSelection.startCharIndex,this.firstSelection.endLine,this.firstSelection.endCharIndex,"rgba(220, 53, 69, 0.3)")}this.renderConnectionLines()}renderConnectionLines(){for(const e of this.connectionLines){const t=this.selectedConnection?.id===e.id;this.renderConnectionLine(e,t)}}renderConnectionLine(e,t=!1){const n=this.getSelectionBounds(e.start),i=this.getSelectionBounds(e.end);if(!n||!i)return;const s=n.x+n.width/2,o=n.y+n.height/2,l=i.x+i.width/2,c=i.y+i.height/2;switch(this.ctx.save(),t?(this.ctx.strokeStyle="#ffff00",this.ctx.lineWidth=e.width+2,this.ctx.globalAlpha=.7):(this.ctx.strokeStyle=e.color,this.ctx.lineWidth=e.width),e.style){case"dotted":this.ctx.setLineDash([2,4]);break;case"dashed":this.ctx.setLineDash([8,4]);break;default:this.ctx.setLineDash([])}this.ctx.beginPath(),this.ctx.moveTo(s,o);const h=.5*Math.abs(c-o);this.ctx.bezierCurveTo(s+h,o,l-h,c,l,c),this.ctx.stroke(),this.ctx.setLineDash([]);const a=t?"#ffff00":e.color;if(this.drawArrow(l,c,Math.atan2(c-o,l-s),a),e.label){const n=t?"#ffff00":e.color;this.drawConnectionLabel(e.label,s,o,l,c,n,t)}this.ctx.restore()}drawArrow(e,t,n,i){this.ctx.save(),this.ctx.fillStyle=i,this.ctx.translate(e,t),this.ctx.rotate(n),this.ctx.beginPath(),this.ctx.moveTo(0,0),this.ctx.lineTo(-10,-3),this.ctx.lineTo(-10,3),this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()}drawConnectionLabel(e,t,n,i,s,o,l=!1){const c=(t+i)/2,h=(n+s)/2;this.ctx.save(),this.ctx.font='12px Consolas, Monaco, "Courier New", monospace',this.ctx.textAlign="center",this.ctx.textBaseline="middle";const a=this.ctx.measureText(e).width;this.ctx.fillStyle=l?"rgba(255, 255, 0, 0.3)":"rgba(30, 30, 30, 0.9)",this.ctx.fillRect(c-a/2-4,h-8-4,a+8,24),this.ctx.strokeStyle=o,this.ctx.lineWidth=1,this.ctx.setLineDash([]),this.ctx.strokeRect(c-a/2-4,h-8-4,a+8,24),this.ctx.fillStyle="#ffffff",this.ctx.fillText(e,c,h),this.ctx.restore()}getSelectionBounds(e){if(!e.fileId)return null;const t=this.fileLayouts.get(e.fileId);if(!t)return null;const n=this.textRenderer.getCharacterBoundsInFile(t,e.startLine,e.startCharIndex),i=this.textRenderer.getCharacterBoundsInFile(t,e.endLine,e.endCharIndex);if(!n||!i)return null;const s=Math.min(n.x,i.x),o=Math.min(n.y,i.y);return{x:s,y:o,width:Math.max(i.x+i.width-s,n.x+n.width-s),height:Math.max(i.y+i.height-o,n.y+n.height-o)}}getConnectionLines(){return[...this.connectionLines]}removeConnection(e){this.connectionLines=this.connectionLines.filter(t=>t.id!==e),this.render()}clearAllConnections(){this.connectionLines=[],this.render()}exportConnections(){return JSON.stringify(this.connectionLines,null,2)}importConnections(e){try{const t=JSON.parse(e);this.connectionLines=t,this.render()}catch(e){console.error("Failed to import connections:",e)}}updateFileLayouts(){const e=Array.from(this.codeFiles.values()),t=this.canvas.width,n=this.canvas.height;if(console.log(`updateFileLayouts: ${e.length} files, canvas: ${t}x${n}`),0!==e.length){if(1===e.length)this.fileLayouts.set(e[0].id,{id:e[0].id,x:0,y:0,width:t,height:n,visible:!0});else if(2===e.length){const i=t/2;this.fileLayouts.set(e[0].id,{id:e[0].id,x:0,y:0,width:i-10,height:n,visible:!0}),this.fileLayouts.set(e[1].id,{id:e[1].id,x:i+10,y:0,width:i-10,height:n,visible:!0})}else if(3===e.length){const i=t/2,s=n/2;this.fileLayouts.set(e[0].id,{id:e[0].id,x:0,y:0,width:i-5,height:s-5,visible:!0}),this.fileLayouts.set(e[1].id,{id:e[1].id,x:i+5,y:0,width:i-5,height:s-5,visible:!0}),this.fileLayouts.set(e[2].id,{id:e[2].id,x:t/4,y:s+5,width:t/2,height:s-5,visible:!0})}}else console.log("No files to layout")}getCharacterAtPosition(e,t){for(const[n,i]of this.fileLayouts)if(i.visible&&e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height){const s=this.textRenderer.getCharacterAtInFile(i,e,t);if(s)return{char:s,fileId:n}}return null}removeCodeFile(e){this.codeFiles.delete(e),this.fileLayouts.delete(e),this.connectionLines=this.connectionLines.filter(t=>t.start.fileId!==e&&t.end.fileId!==e),this.updateFileLayouts(),this.render()}getCodeFiles(){return Array.from(this.codeFiles.values())}getConnectionAtPosition(e,t){for(const n of this.connectionLines)if(this.isPointNearConnection(e,t,n,10))return n;return null}isPointNearConnection(e,t,n,i){const s=this.getSelectionBounds(n.start),o=this.getSelectionBounds(n.end);if(!s||!o)return!1;const l=s.x+s.width/2,c=s.y+s.height/2,h=o.x+o.width/2,a=o.y+o.height/2;for(let n=0;n<20;n++){const s=n/20,o=(n+1)/20,r=this.getBezierPoint(l,c,h,a,s),d=this.getBezierPoint(l,c,h,a,o);if(this.distanceToLineSegment(e,t,r.x,r.y,d.x,d.y)<=i)return!0}return!1}getBezierPoint(e,t,n,i,s){const o=.5*Math.abs(i-t),l=1-s,c=l*l,h=c*l,a=s*s,r=a*s;return{x:h*e+3*c*s*(e+o)+3*l*a*(n-o)+r*n,y:h*t+3*c*s*t+3*l*a*i+r*i}}distanceToLineSegment(e,t,n,i,s,o){const l=e-n,c=t-i,h=s-n,a=o-i,r=l*h+c*a,d=h*h+a*a;if(0===d)return Math.sqrt(l*l+c*c);let u=r/d;u=Math.max(0,Math.min(1,u));const g=e-(n+u*h),f=t-(i+u*a);return Math.sqrt(g*g+f*f)}selectConnection(e){this.selectedConnection=e,this.render(),console.log(`Selected connection: ${e.id}`),this.notifyConnectionSelected(e)}clearConnectionSelection(){this.selectedConnection&&(this.selectedConnection=null,this.render(),this.notifyConnectionDeselected())}notifyConnectionSelected(e){const t=new CustomEvent("connectionSelected",{detail:{connection:e}});this.canvas.dispatchEvent(t)}notifyConnectionDeselected(){const e=new CustomEvent("connectionDeselected");this.canvas.dispatchEvent(e)}updateSelectedConnection(e){this.selectedConnection&&(Object.assign(this.selectedConnection,e),this.render(),console.log(`Updated connection ${this.selectedConnection.id}:`,e))}deleteSelectedConnection(){if(!this.selectedConnection)return;const e=this.selectedConnection.id;this.connectionLines=this.connectionLines.filter(t=>t.id!==e),this.selectedConnection=null,this.render(),console.log(`Deleted connection: ${e}`),this.notifyConnectionDeselected()}getSelectedConnection(){return this.selectedConnection}}},868:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SyntaxHighlighter=void 0,t.SyntaxHighlighter=class{constructor(){this.themes=new Map,this.languages=new Map,this.initializeLanguages(),this.initializeThemes()}initializeLanguages(){this.languages.set("javascript",{name:"JavaScript",extensions:[".js",".jsx"],keywords:["function","const","let","var","if","else","for","while","do","break","continue","return","class","extends","import","export","default","try","catch","finally","throw","new","this","super","static","async","await"],operators:["+","-","*","/","%","=","==","===","!=","!==","<",">","<=",">=","&&","||","!","?",":","=>"],brackets:["(",")","[","]","{","}"],lineComment:"//",blockComment:{start:"/*",end:"*/"}}),this.languages.set("typescript",{name:"TypeScript",extensions:[".ts",".tsx"],keywords:["function","const","let","var","if","else","for","while","do","break","continue","return","class","extends","import","export","default","try","catch","finally","throw","new","this","super","static","async","await","interface","type","enum","public","private","protected","readonly"],operators:["+","-","*","/","%","=","==","===","!=","!==","<",">","<=",">=","&&","||","!","?",":","=>"],brackets:["(",")","[","]","{","}"],lineComment:"//",blockComment:{start:"/*",end:"*/"}}),this.languages.set("python",{name:"Python",extensions:[".py"],keywords:["def","class","if","elif","else","for","while","break","continue","return","import","from","as","try","except","finally","raise","with","lambda","and","or","not","in","is","None","True","False"],operators:["+","-","*","/","//","%","**","=","==","!=","<",">","<=",">=","and","or","not"],brackets:["(",")","[","]","{","}"],lineComment:"#"})}initializeThemes(){this.themes.set("dark",{keyword:{color:"#569cd6"},string:{color:"#ce9178"},number:{color:"#b5cea8"},comment:{color:"#6a9955"},operator:{color:"#d4d4d4"},bracket:{color:"#ffd700"},function:{color:"#dcdcaa"},variable:{color:"#9cdcfe"},type:{color:"#4ec9b0"},default:{color:"#d4d4d4"}})}detectLanguage(e,t){return t&&this.languages.has(t)?t:e.includes("function")&&(e.includes("const")||e.includes("let"))?e.includes("interface")||e.includes(": string")||e.includes(": number")?"typescript":"javascript":e.includes("def ")&&e.includes(":")?"python":"javascript"}tokenize(e,t){const n=[],i=e.split("\n"),s=this.languages.get(t);if(!s)return this.tokenizeGeneric(e);let o=0;for(let e=0;e<i.length;e++){const t=i[e];let l=0;for(;l<t.length;){const i=t.slice(l),c=i.match(/^\s+/);if(c){l+=c[0].length,o+=c[0].length;continue}if(s.lineComment&&i.startsWith(s.lineComment)){const t=i;n.push({type:"comment",value:t,startIndex:o,endIndex:o+t.length,line:e,column:l}),o+=t.length;break}const h=i.match(/^(['"`])((?:\\.|(?!\1)[^\\])*)\1/);if(h){n.push({type:"string",value:h[0],startIndex:o,endIndex:o+h[0].length,line:e,column:l}),l+=h[0].length,o+=h[0].length;continue}const a=i.match(/^\d+\.?\d*/);if(a){n.push({type:"number",value:a[0],startIndex:o,endIndex:o+a[0].length,line:e,column:l}),l+=a[0].length,o+=a[0].length;continue}const r=i.match(/^[a-zA-Z_$][a-zA-Z0-9_$]*/);if(r){const t=r[0],i=s.keywords.includes(t)?"keyword":"identifier";n.push({type:i,value:t,startIndex:o,endIndex:o+t.length,line:e,column:l}),l+=t.length,o+=t.length;continue}let d=!1;for(const t of[...s.operators,...s.brackets].sort((e,t)=>t.length-e.length))if(i.startsWith(t)){const i=s.brackets.includes(t)?"bracket":"operator";n.push({type:i,value:t,startIndex:o,endIndex:o+t.length,line:e,column:l}),l+=t.length,o+=t.length,d=!0;break}d||(n.push({type:"default",value:i[0],startIndex:o,endIndex:o+1,line:e,column:l}),l+=1,o+=1)}o+=1}return n}tokenizeGeneric(e){const t=[],n=e.split("\n");let i=0;for(let e=0;e<n.length;e++){const s=n[e];for(let n=0;n<s.length;n++)t.push({type:"default",value:s[n],startIndex:i,endIndex:i+1,line:e,column:n}),i++;i++}return t}getStylesForTokens(e,t="dark"){const n=this.themes.get(t);if(!n)throw new Error(`Theme '${t}' not found`);const i=[];for(const t of e){for(;i.length<=t.line;)i.push([]);const e=n[t.type]||n.default||{color:"#d4d4d4"};for(let n=0;n<t.value.length;n++)i[t.line][t.column+n]=e}return i}highlight(e,t,n="dark"){const i=t||this.detectLanguage(e),s=this.tokenize(e,i);return this.getStylesForTokens(s,n)}}}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,n),o.exports}(()=>{const e=n(709);document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("canvas"),n=document.getElementById("fileName1"),i=document.getElementById("codeInput1"),s=document.getElementById("loadCode1"),o=document.getElementById("languageSelect1"),l=document.getElementById("fileName2"),c=document.getElementById("codeInput2"),h=document.getElementById("loadCode2"),a=document.getElementById("languageSelect2"),r=document.getElementById("fileName3"),d=document.getElementById("codeInput3"),u=document.getElementById("loadCode3"),g=document.getElementById("languageSelect3"),f=document.getElementById("loadAllFiles"),x=document.getElementById("clearAllFiles"),m=document.getElementById("fontSizeSlider"),y=document.getElementById("fontSizeLabel"),C=document.getElementById("lineColorPicker"),S=document.getElementById("lineStyleSelect"),p=document.getElementById("connectionLabel"),v=document.getElementById("connectionEditor"),L=document.getElementById("connectionInfo"),I=document.getElementById("editConnectionColor"),w=document.getElementById("editConnectionStyle"),b=document.getElementById("editConnectionWidth"),F=document.getElementById("editConnectionWidthLabel"),E=document.getElementById("editConnectionLabel"),B=document.getElementById("applyConnectionChanges"),k=document.getElementById("deleteConnection");if(!t)return void console.error("Canvas element not found");const $={fileName1:n,codeInput1:i,loadCode1Btn:s,languageSelect1:o,fileName2:l,codeInput2:c,loadCode2Btn:h,languageSelect2:a,fileName3:r,codeInput3:d,loadCode3Btn:u,languageSelect3:g,loadAllFilesBtn:f,clearAllFilesBtn:x,fontSizeSlider:m,fontSizeLabel:y,lineColorPicker:C,lineStyleSelect:S,connectionLabel:p,connectionEditor:v,connectionInfo:L,editConnectionColor:I,editConnectionStyle:w,editConnectionWidth:b,editConnectionWidthLabel:F,editConnectionLabel:E,applyConnectionChanges:B,deleteConnection:k};for(const[e,t]of Object.entries($))if(!t)return void console.error(`Element ${e} not found`);const M=new e.CodeVisualizer(t),z=()=>{const e=t.parentElement,n=e.clientWidth,i=e.clientHeight;console.log(`Container dimensions: ${n}x${i}`),console.log(`Resizing canvas from ${t.width}x${t.height} to ${n}x${i}`),n>0&&i>0?(t.width=n,t.height=i,t.style.width=n+"px",t.style.height=i+"px",M.handleResize()):console.error("Invalid container dimensions:",n,i)};setTimeout(()=>{z(),f.click()},200),window.addEventListener("resize",z),s.addEventListener("click",()=>{console.log("Load File 1 clicked");const e=i.value.trim();if(console.log("File 1 code:",e.substring(0,50)+"..."),e){const t=o.value;console.log("Loading file 1 with language:",t),M.loadCodeFile("file1",n.value||"File 1",e,"auto"===t?void 0:t)}else console.log("No code to load for file 1")}),h.addEventListener("click",()=>{const e=c.value.trim();if(e){const t=a.value;M.loadCodeFile("file2",l.value||"File 2",e,"auto"===t?void 0:t)}}),u.addEventListener("click",()=>{const e=d.value.trim();if(e){const t=g.value;M.loadCodeFile("file3",r.value||"File 3",e,"auto"===t?void 0:t)}}),f.addEventListener("click",()=>{console.log("Load All Files clicked");const e=[{id:"file1",name:n.value||"File 1",code:i.value.trim(),language:o.value},{id:"file2",name:l.value||"File 2",code:c.value.trim(),language:a.value},{id:"file3",name:r.value||"File 3",code:d.value.trim(),language:g.value}];console.log("Files to load:",e.map(e=>({id:e.id,name:e.name,hasCode:!!e.code,language:e.language}))),e.forEach(e=>{e.code?(console.log(`Loading ${e.id} with ${e.code.length} characters`),M.loadCodeFile(e.id,e.name,e.code,"auto"===e.language?void 0:e.language)):console.log(`Skipping ${e.id} - no code`)})}),x.addEventListener("click",()=>{M.removeCodeFile("file1"),M.removeCodeFile("file2"),M.removeCodeFile("file3")}),m.addEventListener("input",()=>{const e=parseInt(m.value);y.textContent=`${e}px`,M.setFontSize(e)}),C.addEventListener("change",()=>{M.setDefaultLineColor(C.value)}),S.addEventListener("change",()=>{M.setDefaultLineStyle(S.value)}),p.addEventListener("input",()=>{M.setDefaultConnectionLabel(p.value.trim())}),b.addEventListener("input",()=>{F.textContent=`${b.value}px`}),B.addEventListener("click",()=>{const e={color:I.value,style:w.value,width:parseInt(b.value),label:E.value.trim()||void 0};M.updateSelectedConnection(e),console.log("Applied connection changes:",e)}),k.addEventListener("click",()=>{confirm("Are you sure you want to delete this connection?")&&M.deleteSelectedConnection()}),t.addEventListener("connectionSelected",e=>{!function(e){v.style.display="block";const t=M.getCodeFiles().find(t=>t.id===e.start.fileId)?.name||"Unknown",n=M.getCodeFiles().find(t=>t.id===e.end.fileId)?.name||"Unknown";L.textContent=`${t}:${e.start.startLine+1} → ${n}:${e.end.startLine+1}`,I.value=e.color,w.value=e.style,b.value=e.width.toString(),F.textContent=`${e.width}px`,E.value=e.label||""}(e.detail.connection)}),t.addEventListener("connectionDeselected",()=>{v.style.display="none"}),i.value="function fibonacci(n) {\n    if (n <= 1) {\n        return n;\n    }\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\nconst result = fibonacci(10);\nconsole.log(result);",c.value='def calculate_factorial(n):\n    if n <= 1:\n        return 1\n    return n * calculate_factorial(n - 1)\n\nresult = calculate_factorial(5)\nprint(f"Factorial result: {result}")',d.value=".container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #f0f0f0;\n}\n\n.button {\n    padding: 10px 20px;\n    background-color: #007acc;\n    color: white;\n    border: none;\n    border-radius: 4px;\n}",console.log("Code Connect Visualizer initialized")})})()})();